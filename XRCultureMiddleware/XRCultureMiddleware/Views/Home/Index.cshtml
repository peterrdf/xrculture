@{
    ViewData["Title"] = "Home Page";
}

<h1 class="display-4">Welcome</h1>
<p>Learn about <a href="https://pro.europeana.eu/project/xrculture">Europeana XRCulture</a></p>
@* <div style="display: flex; align-items: center; justify-content: center; gap: 8px;">
    <input id="txtViewerRequestXML" type="text" readonly style="width: 400px;" />
    <button type="button" onclick="document.getElementById('selectViewerRequestXML').click()">Register</button>
    <input id="selectViewerRequestXML" type="file" accept=".xml"
           onclick="this.value = null;" onchange="loadViewerRequestXML(this.files[0]);" style="display:none;" />
</div> *@
<br />
<label for="logArea"><b>Log</b></label>
<br />
<textarea id="logArea" rows="10" style="width:100%"></textarea>
<br />
<label for="viewersLinks"><b>Viewers</b></label>
<textarea id="viewersLinks" style="width:100%"></textarea>

<script>
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////

    let workflowId = "XRCulture-Middleware-Registry";
    let polling = true;

    async function pollLogs() {
        if (!workflowId) return;
        while (polling) {
            const logResponse = await fetch(`/Registry?handler=Logs&workflowId=${workflowId}`);
            if (logResponse.ok) {
                const logs = await logResponse.text();
                const logArea = document.getElementById('logArea');
                logArea.value = logs;
                logArea.scrollTop = logArea.scrollHeight; // Auto-scroll to bottom
            }

            const viewersResponse = await fetch(`/Registry?handler=Viewers`);
            if (viewersResponse.ok) {
                const viewers = await viewersResponse.text();
                const viewersLinks = document.getElementById('viewersLinks');
                viewersLinks.value = viewers;
            }

            await new Promise(r => setTimeout(r, 1000));
        }
    }

    pollLogs();

    async function log(message) {
        const logArea = document.getElementById('logArea');
        logArea.value += '*******************************************************************\n';
        logArea.value += message;
        logArea.scrollTop = logArea.scrollHeight; // Auto-scroll to bottom
    }

    async function postRegisterVeiwerRequest(xml) {
        const settings = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(xml)
        };

        const fetchResponse = await fetch('/Registry?handler=Register', settings);
        const data = await fetchResponse.text();
        console.log(data);
        log('<***** Registration Response *****>\n' + data);
    }

    function loadViewerRequestXML(file) {
        if (!file || file.type !== "text/xml") {
            alert("Please select a valid XML file.");
            return;
        }

        document.getElementById('txtViewerRequestXML').value = file.name;

        var fileReader = new FileReader()
        fileReader.onload = function () {
            log('<***** Registration Request *****>\n' + fileReader.result);
            postRegisterVeiwerRequest(fileReader.result);
        }

        fileReader.readAsText(file)
    }    

    function showResultLinks(workflowId) {
        document.getElementById('divExecute').style.display = 'block';
        const resultDiv = document.getElementById('resultLinks');
        const cacheBuster = Date.now();
        const binzUrl = `/Registry?handler=File&file=${workflowId}.binz&v=${cacheBuster}`;
        const viewerUrl = `/viewer/viewer.html?model=${workflowId}&v=${cacheBuster}`;
        resultDiv.innerHTML = `
            <h5>
                <a href="${viewerUrl}" target="_blank">View 3D Model in WebGL Viewer</a>
            </h5>
            <h5>
                <a href="${binzUrl}" target="_blank">Download .binz Archive</a>
            </h5>
        `;
            }
</script>
